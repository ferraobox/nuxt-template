name: ci

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: 14.18.3

jobs:
  prepare:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.5.1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: actions/cache@v2.1.7
        id: cache-node-modules
        with:
          path: './node_modules'
          key: yarn-lock-${{ env.NODE_VERSION }}-${{ hashFiles('yarn.lock') }}
      - run: echo //npm.pkg.github.com/:_authToken=$NUXT_PKG_TOKEN >> ~/.npmrc
        env:
          NUXT_PKG_TOKEN: ${{ secrets.NUXT_PKG_TOKEN }}
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --silent

  lint:
    needs: prepare
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.5.1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: actions/cache@v2.1.7
        with:
          path: './node_modules'
          key: yarn-lock-${{ env.NODE_VERSION }}-${{ hashFiles('yarn.lock') }}
      - run: yarn lint

  build:
    needs: prepare
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.5.1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: actions/cache@v2.1.7
        with:
          path: './node_modules'
          key: yarn-lock-${{ env.NODE_VERSION }}-${{ hashFiles('yarn.lock') }}
      - uses: actions/cache@v2.1.7
        with:
          path: .nuxt
          key: nuxt-${{ env.NODE_VERSION }}-${{ github.sha }}
      - run: yarn build

  unit-test:
    needs: [prepare, build]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.5.1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: actions/cache@v2.1.7
        with:
          path: './node_modules'
          key: yarn-lock-${{ env.NODE_VERSION }}-${{ hashFiles('yarn.lock') }}
      - uses: actions/cache@v2.1.7
        with:
          path: .nuxt
          key: nuxt-${{ env.NODE_VERSION }}-${{ github.sha }}
      - run: yarn test

  ui-test:
    needs: [prepare, build, deploy-preview]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.5.1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: actions/cache@v2.1.7
        with:
          path: './node_modules'
          key: yarn-lock-${{ env.NODE_VERSION }}-${{ hashFiles('yarn.lock') }}
      - uses: actions/cache@v2.1.7
        with:
          path: .nuxt
          key: nuxt-${{ env.NODE_VERSION }}-${{ github.sha }}
      - run: echo 'This should run cypress test'
        # env:
        #   VERCEL_URL: ${{ steps.deploy-vercel-staging.outputs.preview-url }}

  release:
    if: github.ref == 'refs/heads/main'
    needs: [build, lint, prepare, unit-test, ui-test]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - uses: actions/setup-node@v2.5.1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: actions/cache@v2.1.7
        with:
          path: './node_modules'
          key: yarn-lock-${{ env.NODE_VERSION }}-${{ hashFiles('yarn.lock') }}
      - uses: actions/cache@v2.1.7
        with:
          path: .nuxt
          key: nuxt-${{ env.NODE_VERSION }}-${{ github.sha }}
      - run: echo //npm.pkg.github.com/:_authToken=$NUXT_PKG_TOKEN >> ~/.npmrc
        env:
          NUXT_PKG_TOKEN: ${{ secrets.NUXT_PKG_TOKEN }}
      - run: yarn release --ci
        env:
          GITHUB_TOKEN: ${{ secrets.NUXT_PKG_TOKEN }}

  deploy-preview:
    # if: github.event_name == 'pull_request'
    needs: build
    runs-on: ubuntu-20.04
    environment: preview
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - uses: actions/setup-node@v2.5.1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: actions/cache@v2.1.7
        with:
          path: './node_modules'
          key: yarn-lock-${{ env.NODE_VERSION }}-${{ hashFiles('yarn.lock') }}
      - uses: actions/cache@v2.1.7
        with:
          path: .nuxt
          key: nuxt-${{ env.NODE_VERSION }}-${{ github.sha }}
      - run: echo //npm.pkg.github.com/:_authToken=$NUXT_PKG_TOKEN >> ~/.npmrc
        env:
          NUXT_PKG_TOKEN: ${{ secrets.NUXT_PKG_TOKEN }}
      - name: 'Deploy Preview'
        run: |
          yarn global add vercel
          GITHUB-BRANCH-REF=${GITHUB_REF##*/}
          vercel --token ${VERCEL_TOKEN} alias set ["ferraobox-nuxt-template-${GITHUB-BRANCH-REF}.vercel.app"]
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          GITHUB-TOKEN: ${{ secrets.NUXT_PKG_TOKEN }}

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: release
    runs-on: ubuntu-20.04
    environment: production
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - uses: actions/setup-node@v2.5.1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: actions/cache@v2.1.7
        with:
          path: './node_modules'
          key: yarn-lock-${{ env.NODE_VERSION }}-${{ hashFiles('yarn.lock') }}
      - uses: actions/cache@v2.1.7
        with:
          path: .nuxt
          key: nuxt-${{ env.NODE_VERSION }}-${{ github.sha }}
      - run: echo //npm.pkg.github.com/:_authToken=$NUXT_PKG_TOKEN >> ~/.npmrc
        env:
          NUXT_PKG_TOKEN: ${{ secrets.NUXT_PKG_TOKEN }}
      - name: 'Deploy Production'
        run: |
          yarn global add vercel
          GITHUB-BRANCH-REF=${GITHUB-BRANCH-REF##*/}
          vercel --token ${VERCEL_TOKEN} --prod alias set ["ferraobox-nuxt-template.vercel.app"]
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          GITHUB-TOKEN: ${{ secrets.NUXT_PKG_TOKEN }}
          GITHUB-BRANCH-REF: ${{ github.ref }}
